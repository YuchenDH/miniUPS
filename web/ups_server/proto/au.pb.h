// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: au.proto

#ifndef PROTOBUF_au_2eproto__INCLUDED
#define PROTOBUF_au_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace au {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_au_2eproto();
void protobuf_AssignDesc_au_2eproto();
void protobuf_ShutdownFile_au_2eproto();

class Item;
class Warehouse;
class Position;
class Truck;
class A2Upickuprequest;
class U2Agenpid;
class U2Atruckarrive;
class A2Utruckdepart;
class A2U;
class U2A;

// ===================================================================

class Item : public ::google::protobuf::Message {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  void Swap(Item* other);

  // implements Message ----------------------------------------------

  Item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string des = 1;
  inline bool has_des() const;
  inline void clear_des();
  static const int kDesFieldNumber = 1;
  inline const ::std::string& des() const;
  inline void set_des(const ::std::string& value);
  inline void set_des(const char* value);
  inline void set_des(const char* value, size_t size);
  inline ::std::string* mutable_des();
  inline ::std::string* release_des();
  inline void set_allocated_des(::std::string* des);

  // required int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int64 id = 3;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 3;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:au.Item)
 private:
  inline void set_has_des();
  inline void clear_has_des();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* des_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static Item* default_instance_;
};
// -------------------------------------------------------------------

class Warehouse : public ::google::protobuf::Message {
 public:
  Warehouse();
  virtual ~Warehouse();

  Warehouse(const Warehouse& from);

  inline Warehouse& operator=(const Warehouse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Warehouse& default_instance();

  void Swap(Warehouse* other);

  // implements Message ----------------------------------------------

  Warehouse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Warehouse& from);
  void MergeFrom(const Warehouse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 X = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 Y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:au.Warehouse)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static Warehouse* default_instance_;
};
// -------------------------------------------------------------------

class Position : public ::google::protobuf::Message {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  void Swap(Position* other);

  // implements Message ----------------------------------------------

  Position* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 X = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 Y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:au.Position)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static Position* default_instance_;
};
// -------------------------------------------------------------------

class Truck : public ::google::protobuf::Message {
 public:
  Truck();
  virtual ~Truck();

  Truck(const Truck& from);

  inline Truck& operator=(const Truck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Truck& default_instance();

  void Swap(Truck* other);

  // implements Message ----------------------------------------------

  Truck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Truck& from);
  void MergeFrom(const Truck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 X = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 Y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:au.Truck)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static Truck* default_instance_;
};
// -------------------------------------------------------------------

class A2Upickuprequest : public ::google::protobuf::Message {
 public:
  A2Upickuprequest();
  virtual ~A2Upickuprequest();

  A2Upickuprequest(const A2Upickuprequest& from);

  inline A2Upickuprequest& operator=(const A2Upickuprequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2Upickuprequest& default_instance();

  void Swap(A2Upickuprequest* other);

  // implements Message ----------------------------------------------

  A2Upickuprequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const A2Upickuprequest& from);
  void MergeFrom(const A2Upickuprequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .au.Item items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::au::Item& items(int index) const;
  inline ::au::Item* mutable_items(int index);
  inline ::au::Item* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::au::Item >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::au::Item >*
      mutable_items();

  // required .au.Warehouse wh = 2;
  inline bool has_wh() const;
  inline void clear_wh();
  static const int kWhFieldNumber = 2;
  inline const ::au::Warehouse& wh() const;
  inline ::au::Warehouse* mutable_wh();
  inline ::au::Warehouse* release_wh();
  inline void set_allocated_wh(::au::Warehouse* wh);

  // required int64 oid = 3;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 3;
  inline ::google::protobuf::int64 oid() const;
  inline void set_oid(::google::protobuf::int64 value);

  // required .au.Position destination = 4;
  inline bool has_destination() const;
  inline void clear_destination();
  static const int kDestinationFieldNumber = 4;
  inline const ::au::Position& destination() const;
  inline ::au::Position* mutable_destination();
  inline ::au::Position* release_destination();
  inline void set_allocated_destination(::au::Position* destination);

  // optional string upsAccount = 5;
  inline bool has_upsaccount() const;
  inline void clear_upsaccount();
  static const int kUpsAccountFieldNumber = 5;
  inline const ::std::string& upsaccount() const;
  inline void set_upsaccount(const ::std::string& value);
  inline void set_upsaccount(const char* value);
  inline void set_upsaccount(const char* value, size_t size);
  inline ::std::string* mutable_upsaccount();
  inline ::std::string* release_upsaccount();
  inline void set_allocated_upsaccount(::std::string* upsaccount);

  // @@protoc_insertion_point(class_scope:au.A2Upickuprequest)
 private:
  inline void set_has_wh();
  inline void clear_has_wh();
  inline void set_has_oid();
  inline void clear_has_oid();
  inline void set_has_destination();
  inline void clear_has_destination();
  inline void set_has_upsaccount();
  inline void clear_has_upsaccount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::au::Item > items_;
  ::au::Warehouse* wh_;
  ::google::protobuf::int64 oid_;
  ::au::Position* destination_;
  ::std::string* upsaccount_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static A2Upickuprequest* default_instance_;
};
// -------------------------------------------------------------------

class U2Agenpid : public ::google::protobuf::Message {
 public:
  U2Agenpid();
  virtual ~U2Agenpid();

  U2Agenpid(const U2Agenpid& from);

  inline U2Agenpid& operator=(const U2Agenpid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const U2Agenpid& default_instance();

  void Swap(U2Agenpid* other);

  // implements Message ----------------------------------------------

  U2Agenpid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const U2Agenpid& from);
  void MergeFrom(const U2Agenpid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 pid = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 1;
  inline ::google::protobuf::int64 pid() const;
  inline void set_pid(::google::protobuf::int64 value);

  // required int64 oid = 2;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 2;
  inline ::google::protobuf::int64 oid() const;
  inline void set_oid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:au.U2Agenpid)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_oid();
  inline void clear_has_oid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int64 oid_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static U2Agenpid* default_instance_;
};
// -------------------------------------------------------------------

class U2Atruckarrive : public ::google::protobuf::Message {
 public:
  U2Atruckarrive();
  virtual ~U2Atruckarrive();

  U2Atruckarrive(const U2Atruckarrive& from);

  inline U2Atruckarrive& operator=(const U2Atruckarrive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const U2Atruckarrive& default_instance();

  void Swap(U2Atruckarrive* other);

  // implements Message ----------------------------------------------

  U2Atruckarrive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const U2Atruckarrive& from);
  void MergeFrom(const U2Atruckarrive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .au.Truck tr = 1;
  inline bool has_tr() const;
  inline void clear_tr();
  static const int kTrFieldNumber = 1;
  inline const ::au::Truck& tr() const;
  inline ::au::Truck* mutable_tr();
  inline ::au::Truck* release_tr();
  inline void set_allocated_tr(::au::Truck* tr);

  // repeated int64 OBSOLETE_pids = 2;
  inline int obsolete_pids_size() const;
  inline void clear_obsolete_pids();
  static const int kOBSOLETEPidsFieldNumber = 2;
  inline ::google::protobuf::int64 obsolete_pids(int index) const;
  inline void set_obsolete_pids(int index, ::google::protobuf::int64 value);
  inline void add_obsolete_pids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      obsolete_pids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_obsolete_pids();

  // required int32 whid = 3;
  inline bool has_whid() const;
  inline void clear_whid();
  static const int kWhidFieldNumber = 3;
  inline ::google::protobuf::int32 whid() const;
  inline void set_whid(::google::protobuf::int32 value);

  // repeated int64 oids = 4;
  inline int oids_size() const;
  inline void clear_oids();
  static const int kOidsFieldNumber = 4;
  inline ::google::protobuf::int64 oids(int index) const;
  inline void set_oids(int index, ::google::protobuf::int64 value);
  inline void add_oids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      oids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_oids();

  // @@protoc_insertion_point(class_scope:au.U2Atruckarrive)
 private:
  inline void set_has_tr();
  inline void clear_has_tr();
  inline void set_has_whid();
  inline void clear_has_whid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::au::Truck* tr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > obsolete_pids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > oids_;
  ::google::protobuf::int32 whid_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static U2Atruckarrive* default_instance_;
};
// -------------------------------------------------------------------

class A2Utruckdepart : public ::google::protobuf::Message {
 public:
  A2Utruckdepart();
  virtual ~A2Utruckdepart();

  A2Utruckdepart(const A2Utruckdepart& from);

  inline A2Utruckdepart& operator=(const A2Utruckdepart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2Utruckdepart& default_instance();

  void Swap(A2Utruckdepart* other);

  // implements Message ----------------------------------------------

  A2Utruckdepart* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const A2Utruckdepart& from);
  void MergeFrom(const A2Utruckdepart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .au.Truck tr = 1;
  inline bool has_tr() const;
  inline void clear_tr();
  static const int kTrFieldNumber = 1;
  inline const ::au::Truck& tr() const;
  inline ::au::Truck* mutable_tr();
  inline ::au::Truck* release_tr();
  inline void set_allocated_tr(::au::Truck* tr);

  // @@protoc_insertion_point(class_scope:au.A2Utruckdepart)
 private:
  inline void set_has_tr();
  inline void clear_has_tr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::au::Truck* tr_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static A2Utruckdepart* default_instance_;
};
// -------------------------------------------------------------------

class A2U : public ::google::protobuf::Message {
 public:
  A2U();
  virtual ~A2U();

  A2U(const A2U& from);

  inline A2U& operator=(const A2U& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2U& default_instance();

  void Swap(A2U* other);

  // implements Message ----------------------------------------------

  A2U* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const A2U& from);
  void MergeFrom(const A2U& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .au.A2Upickuprequest pr = 1;
  inline int pr_size() const;
  inline void clear_pr();
  static const int kPrFieldNumber = 1;
  inline const ::au::A2Upickuprequest& pr(int index) const;
  inline ::au::A2Upickuprequest* mutable_pr(int index);
  inline ::au::A2Upickuprequest* add_pr();
  inline const ::google::protobuf::RepeatedPtrField< ::au::A2Upickuprequest >&
      pr() const;
  inline ::google::protobuf::RepeatedPtrField< ::au::A2Upickuprequest >*
      mutable_pr();

  // repeated .au.A2Utruckdepart td = 2;
  inline int td_size() const;
  inline void clear_td();
  static const int kTdFieldNumber = 2;
  inline const ::au::A2Utruckdepart& td(int index) const;
  inline ::au::A2Utruckdepart* mutable_td(int index);
  inline ::au::A2Utruckdepart* add_td();
  inline const ::google::protobuf::RepeatedPtrField< ::au::A2Utruckdepart >&
      td() const;
  inline ::google::protobuf::RepeatedPtrField< ::au::A2Utruckdepart >*
      mutable_td();

  // @@protoc_insertion_point(class_scope:au.A2U)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::au::A2Upickuprequest > pr_;
  ::google::protobuf::RepeatedPtrField< ::au::A2Utruckdepart > td_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static A2U* default_instance_;
};
// -------------------------------------------------------------------

class U2A : public ::google::protobuf::Message {
 public:
  U2A();
  virtual ~U2A();

  U2A(const U2A& from);

  inline U2A& operator=(const U2A& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const U2A& default_instance();

  void Swap(U2A* other);

  // implements Message ----------------------------------------------

  U2A* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const U2A& from);
  void MergeFrom(const U2A& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .au.U2Agenpid gp = 1;
  inline int gp_size() const;
  inline void clear_gp();
  static const int kGpFieldNumber = 1;
  inline const ::au::U2Agenpid& gp(int index) const;
  inline ::au::U2Agenpid* mutable_gp(int index);
  inline ::au::U2Agenpid* add_gp();
  inline const ::google::protobuf::RepeatedPtrField< ::au::U2Agenpid >&
      gp() const;
  inline ::google::protobuf::RepeatedPtrField< ::au::U2Agenpid >*
      mutable_gp();

  // repeated .au.U2Atruckarrive ta = 2;
  inline int ta_size() const;
  inline void clear_ta();
  static const int kTaFieldNumber = 2;
  inline const ::au::U2Atruckarrive& ta(int index) const;
  inline ::au::U2Atruckarrive* mutable_ta(int index);
  inline ::au::U2Atruckarrive* add_ta();
  inline const ::google::protobuf::RepeatedPtrField< ::au::U2Atruckarrive >&
      ta() const;
  inline ::google::protobuf::RepeatedPtrField< ::au::U2Atruckarrive >*
      mutable_ta();

  // @@protoc_insertion_point(class_scope:au.U2A)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::au::U2Agenpid > gp_;
  ::google::protobuf::RepeatedPtrField< ::au::U2Atruckarrive > ta_;
  friend void  protobuf_AddDesc_au_2eproto();
  friend void protobuf_AssignDesc_au_2eproto();
  friend void protobuf_ShutdownFile_au_2eproto();

  void InitAsDefaultInstance();
  static U2A* default_instance_;
};
// ===================================================================


// ===================================================================

// Item

// required string des = 1;
inline bool Item::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_des() {
  if (des_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    des_->clear();
  }
  clear_has_des();
}
inline const ::std::string& Item::des() const {
  // @@protoc_insertion_point(field_get:au.Item.des)
  return *des_;
}
inline void Item::set_des(const ::std::string& value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    des_ = new ::std::string;
  }
  des_->assign(value);
  // @@protoc_insertion_point(field_set:au.Item.des)
}
inline void Item::set_des(const char* value) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    des_ = new ::std::string;
  }
  des_->assign(value);
  // @@protoc_insertion_point(field_set_char:au.Item.des)
}
inline void Item::set_des(const char* value, size_t size) {
  set_has_des();
  if (des_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    des_ = new ::std::string;
  }
  des_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:au.Item.des)
}
inline ::std::string* Item::mutable_des() {
  set_has_des();
  if (des_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    des_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:au.Item.des)
  return des_;
}
inline ::std::string* Item::release_des() {
  clear_has_des();
  if (des_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = des_;
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Item::set_allocated_des(::std::string* des) {
  if (des_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete des_;
  }
  if (des) {
    set_has_des();
    des_ = des;
  } else {
    clear_has_des();
    des_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:au.Item.des)
}

// required int32 count = 2;
inline bool Item::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Item::count() const {
  // @@protoc_insertion_point(field_get:au.Item.count)
  return count_;
}
inline void Item::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:au.Item.count)
}

// optional int64 id = 3;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Item::id() const {
  // @@protoc_insertion_point(field_get:au.Item.id)
  return id_;
}
inline void Item::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:au.Item.id)
}

// -------------------------------------------------------------------

// Warehouse

// required int32 id = 1;
inline bool Warehouse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Warehouse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Warehouse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Warehouse::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Warehouse::id() const {
  // @@protoc_insertion_point(field_get:au.Warehouse.id)
  return id_;
}
inline void Warehouse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:au.Warehouse.id)
}

// required int32 X = 2;
inline bool Warehouse::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Warehouse::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Warehouse::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Warehouse::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Warehouse::x() const {
  // @@protoc_insertion_point(field_get:au.Warehouse.X)
  return x_;
}
inline void Warehouse::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:au.Warehouse.X)
}

// required int32 Y = 3;
inline bool Warehouse::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Warehouse::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Warehouse::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Warehouse::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Warehouse::y() const {
  // @@protoc_insertion_point(field_get:au.Warehouse.Y)
  return y_;
}
inline void Warehouse::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:au.Warehouse.Y)
}

// -------------------------------------------------------------------

// Position

// required int32 X = 1;
inline bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Position::x() const {
  // @@protoc_insertion_point(field_get:au.Position.X)
  return x_;
}
inline void Position::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:au.Position.X)
}

// required int32 Y = 2;
inline bool Position::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Position::y() const {
  // @@protoc_insertion_point(field_get:au.Position.Y)
  return y_;
}
inline void Position::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:au.Position.Y)
}

// -------------------------------------------------------------------

// Truck

// required int32 id = 1;
inline bool Truck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Truck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Truck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Truck::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Truck::id() const {
  // @@protoc_insertion_point(field_get:au.Truck.id)
  return id_;
}
inline void Truck::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:au.Truck.id)
}

// optional int32 X = 2;
inline bool Truck::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Truck::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Truck::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Truck::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Truck::x() const {
  // @@protoc_insertion_point(field_get:au.Truck.X)
  return x_;
}
inline void Truck::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:au.Truck.X)
}

// optional int32 Y = 3;
inline bool Truck::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Truck::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Truck::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Truck::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Truck::y() const {
  // @@protoc_insertion_point(field_get:au.Truck.Y)
  return y_;
}
inline void Truck::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:au.Truck.Y)
}

// -------------------------------------------------------------------

// A2Upickuprequest

// repeated .au.Item items = 1;
inline int A2Upickuprequest::items_size() const {
  return items_.size();
}
inline void A2Upickuprequest::clear_items() {
  items_.Clear();
}
inline const ::au::Item& A2Upickuprequest::items(int index) const {
  // @@protoc_insertion_point(field_get:au.A2Upickuprequest.items)
  return items_.Get(index);
}
inline ::au::Item* A2Upickuprequest::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:au.A2Upickuprequest.items)
  return items_.Mutable(index);
}
inline ::au::Item* A2Upickuprequest::add_items() {
  // @@protoc_insertion_point(field_add:au.A2Upickuprequest.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::au::Item >&
A2Upickuprequest::items() const {
  // @@protoc_insertion_point(field_list:au.A2Upickuprequest.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::au::Item >*
A2Upickuprequest::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:au.A2Upickuprequest.items)
  return &items_;
}

// required .au.Warehouse wh = 2;
inline bool A2Upickuprequest::has_wh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void A2Upickuprequest::set_has_wh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void A2Upickuprequest::clear_has_wh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void A2Upickuprequest::clear_wh() {
  if (wh_ != NULL) wh_->::au::Warehouse::Clear();
  clear_has_wh();
}
inline const ::au::Warehouse& A2Upickuprequest::wh() const {
  // @@protoc_insertion_point(field_get:au.A2Upickuprequest.wh)
  return wh_ != NULL ? *wh_ : *default_instance_->wh_;
}
inline ::au::Warehouse* A2Upickuprequest::mutable_wh() {
  set_has_wh();
  if (wh_ == NULL) wh_ = new ::au::Warehouse;
  // @@protoc_insertion_point(field_mutable:au.A2Upickuprequest.wh)
  return wh_;
}
inline ::au::Warehouse* A2Upickuprequest::release_wh() {
  clear_has_wh();
  ::au::Warehouse* temp = wh_;
  wh_ = NULL;
  return temp;
}
inline void A2Upickuprequest::set_allocated_wh(::au::Warehouse* wh) {
  delete wh_;
  wh_ = wh;
  if (wh) {
    set_has_wh();
  } else {
    clear_has_wh();
  }
  // @@protoc_insertion_point(field_set_allocated:au.A2Upickuprequest.wh)
}

// required int64 oid = 3;
inline bool A2Upickuprequest::has_oid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void A2Upickuprequest::set_has_oid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void A2Upickuprequest::clear_has_oid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void A2Upickuprequest::clear_oid() {
  oid_ = GOOGLE_LONGLONG(0);
  clear_has_oid();
}
inline ::google::protobuf::int64 A2Upickuprequest::oid() const {
  // @@protoc_insertion_point(field_get:au.A2Upickuprequest.oid)
  return oid_;
}
inline void A2Upickuprequest::set_oid(::google::protobuf::int64 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:au.A2Upickuprequest.oid)
}

// required .au.Position destination = 4;
inline bool A2Upickuprequest::has_destination() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void A2Upickuprequest::set_has_destination() {
  _has_bits_[0] |= 0x00000008u;
}
inline void A2Upickuprequest::clear_has_destination() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void A2Upickuprequest::clear_destination() {
  if (destination_ != NULL) destination_->::au::Position::Clear();
  clear_has_destination();
}
inline const ::au::Position& A2Upickuprequest::destination() const {
  // @@protoc_insertion_point(field_get:au.A2Upickuprequest.destination)
  return destination_ != NULL ? *destination_ : *default_instance_->destination_;
}
inline ::au::Position* A2Upickuprequest::mutable_destination() {
  set_has_destination();
  if (destination_ == NULL) destination_ = new ::au::Position;
  // @@protoc_insertion_point(field_mutable:au.A2Upickuprequest.destination)
  return destination_;
}
inline ::au::Position* A2Upickuprequest::release_destination() {
  clear_has_destination();
  ::au::Position* temp = destination_;
  destination_ = NULL;
  return temp;
}
inline void A2Upickuprequest::set_allocated_destination(::au::Position* destination) {
  delete destination_;
  destination_ = destination;
  if (destination) {
    set_has_destination();
  } else {
    clear_has_destination();
  }
  // @@protoc_insertion_point(field_set_allocated:au.A2Upickuprequest.destination)
}

// optional string upsAccount = 5;
inline bool A2Upickuprequest::has_upsaccount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void A2Upickuprequest::set_has_upsaccount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void A2Upickuprequest::clear_has_upsaccount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void A2Upickuprequest::clear_upsaccount() {
  if (upsaccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    upsaccount_->clear();
  }
  clear_has_upsaccount();
}
inline const ::std::string& A2Upickuprequest::upsaccount() const {
  // @@protoc_insertion_point(field_get:au.A2Upickuprequest.upsAccount)
  return *upsaccount_;
}
inline void A2Upickuprequest::set_upsaccount(const ::std::string& value) {
  set_has_upsaccount();
  if (upsaccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    upsaccount_ = new ::std::string;
  }
  upsaccount_->assign(value);
  // @@protoc_insertion_point(field_set:au.A2Upickuprequest.upsAccount)
}
inline void A2Upickuprequest::set_upsaccount(const char* value) {
  set_has_upsaccount();
  if (upsaccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    upsaccount_ = new ::std::string;
  }
  upsaccount_->assign(value);
  // @@protoc_insertion_point(field_set_char:au.A2Upickuprequest.upsAccount)
}
inline void A2Upickuprequest::set_upsaccount(const char* value, size_t size) {
  set_has_upsaccount();
  if (upsaccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    upsaccount_ = new ::std::string;
  }
  upsaccount_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:au.A2Upickuprequest.upsAccount)
}
inline ::std::string* A2Upickuprequest::mutable_upsaccount() {
  set_has_upsaccount();
  if (upsaccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    upsaccount_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:au.A2Upickuprequest.upsAccount)
  return upsaccount_;
}
inline ::std::string* A2Upickuprequest::release_upsaccount() {
  clear_has_upsaccount();
  if (upsaccount_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = upsaccount_;
    upsaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void A2Upickuprequest::set_allocated_upsaccount(::std::string* upsaccount) {
  if (upsaccount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete upsaccount_;
  }
  if (upsaccount) {
    set_has_upsaccount();
    upsaccount_ = upsaccount;
  } else {
    clear_has_upsaccount();
    upsaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:au.A2Upickuprequest.upsAccount)
}

// -------------------------------------------------------------------

// U2Agenpid

// required int64 pid = 1;
inline bool U2Agenpid::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void U2Agenpid::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void U2Agenpid::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void U2Agenpid::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 U2Agenpid::pid() const {
  // @@protoc_insertion_point(field_get:au.U2Agenpid.pid)
  return pid_;
}
inline void U2Agenpid::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:au.U2Agenpid.pid)
}

// required int64 oid = 2;
inline bool U2Agenpid::has_oid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void U2Agenpid::set_has_oid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void U2Agenpid::clear_has_oid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void U2Agenpid::clear_oid() {
  oid_ = GOOGLE_LONGLONG(0);
  clear_has_oid();
}
inline ::google::protobuf::int64 U2Agenpid::oid() const {
  // @@protoc_insertion_point(field_get:au.U2Agenpid.oid)
  return oid_;
}
inline void U2Agenpid::set_oid(::google::protobuf::int64 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:au.U2Agenpid.oid)
}

// -------------------------------------------------------------------

// U2Atruckarrive

// required .au.Truck tr = 1;
inline bool U2Atruckarrive::has_tr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void U2Atruckarrive::set_has_tr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void U2Atruckarrive::clear_has_tr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void U2Atruckarrive::clear_tr() {
  if (tr_ != NULL) tr_->::au::Truck::Clear();
  clear_has_tr();
}
inline const ::au::Truck& U2Atruckarrive::tr() const {
  // @@protoc_insertion_point(field_get:au.U2Atruckarrive.tr)
  return tr_ != NULL ? *tr_ : *default_instance_->tr_;
}
inline ::au::Truck* U2Atruckarrive::mutable_tr() {
  set_has_tr();
  if (tr_ == NULL) tr_ = new ::au::Truck;
  // @@protoc_insertion_point(field_mutable:au.U2Atruckarrive.tr)
  return tr_;
}
inline ::au::Truck* U2Atruckarrive::release_tr() {
  clear_has_tr();
  ::au::Truck* temp = tr_;
  tr_ = NULL;
  return temp;
}
inline void U2Atruckarrive::set_allocated_tr(::au::Truck* tr) {
  delete tr_;
  tr_ = tr;
  if (tr) {
    set_has_tr();
  } else {
    clear_has_tr();
  }
  // @@protoc_insertion_point(field_set_allocated:au.U2Atruckarrive.tr)
}

// repeated int64 OBSOLETE_pids = 2;
inline int U2Atruckarrive::obsolete_pids_size() const {
  return obsolete_pids_.size();
}
inline void U2Atruckarrive::clear_obsolete_pids() {
  obsolete_pids_.Clear();
}
inline ::google::protobuf::int64 U2Atruckarrive::obsolete_pids(int index) const {
  // @@protoc_insertion_point(field_get:au.U2Atruckarrive.OBSOLETE_pids)
  return obsolete_pids_.Get(index);
}
inline void U2Atruckarrive::set_obsolete_pids(int index, ::google::protobuf::int64 value) {
  obsolete_pids_.Set(index, value);
  // @@protoc_insertion_point(field_set:au.U2Atruckarrive.OBSOLETE_pids)
}
inline void U2Atruckarrive::add_obsolete_pids(::google::protobuf::int64 value) {
  obsolete_pids_.Add(value);
  // @@protoc_insertion_point(field_add:au.U2Atruckarrive.OBSOLETE_pids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
U2Atruckarrive::obsolete_pids() const {
  // @@protoc_insertion_point(field_list:au.U2Atruckarrive.OBSOLETE_pids)
  return obsolete_pids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
U2Atruckarrive::mutable_obsolete_pids() {
  // @@protoc_insertion_point(field_mutable_list:au.U2Atruckarrive.OBSOLETE_pids)
  return &obsolete_pids_;
}

// required int32 whid = 3;
inline bool U2Atruckarrive::has_whid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void U2Atruckarrive::set_has_whid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void U2Atruckarrive::clear_has_whid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void U2Atruckarrive::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
inline ::google::protobuf::int32 U2Atruckarrive::whid() const {
  // @@protoc_insertion_point(field_get:au.U2Atruckarrive.whid)
  return whid_;
}
inline void U2Atruckarrive::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:au.U2Atruckarrive.whid)
}

// repeated int64 oids = 4;
inline int U2Atruckarrive::oids_size() const {
  return oids_.size();
}
inline void U2Atruckarrive::clear_oids() {
  oids_.Clear();
}
inline ::google::protobuf::int64 U2Atruckarrive::oids(int index) const {
  // @@protoc_insertion_point(field_get:au.U2Atruckarrive.oids)
  return oids_.Get(index);
}
inline void U2Atruckarrive::set_oids(int index, ::google::protobuf::int64 value) {
  oids_.Set(index, value);
  // @@protoc_insertion_point(field_set:au.U2Atruckarrive.oids)
}
inline void U2Atruckarrive::add_oids(::google::protobuf::int64 value) {
  oids_.Add(value);
  // @@protoc_insertion_point(field_add:au.U2Atruckarrive.oids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
U2Atruckarrive::oids() const {
  // @@protoc_insertion_point(field_list:au.U2Atruckarrive.oids)
  return oids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
U2Atruckarrive::mutable_oids() {
  // @@protoc_insertion_point(field_mutable_list:au.U2Atruckarrive.oids)
  return &oids_;
}

// -------------------------------------------------------------------

// A2Utruckdepart

// required .au.Truck tr = 1;
inline bool A2Utruckdepart::has_tr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void A2Utruckdepart::set_has_tr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void A2Utruckdepart::clear_has_tr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void A2Utruckdepart::clear_tr() {
  if (tr_ != NULL) tr_->::au::Truck::Clear();
  clear_has_tr();
}
inline const ::au::Truck& A2Utruckdepart::tr() const {
  // @@protoc_insertion_point(field_get:au.A2Utruckdepart.tr)
  return tr_ != NULL ? *tr_ : *default_instance_->tr_;
}
inline ::au::Truck* A2Utruckdepart::mutable_tr() {
  set_has_tr();
  if (tr_ == NULL) tr_ = new ::au::Truck;
  // @@protoc_insertion_point(field_mutable:au.A2Utruckdepart.tr)
  return tr_;
}
inline ::au::Truck* A2Utruckdepart::release_tr() {
  clear_has_tr();
  ::au::Truck* temp = tr_;
  tr_ = NULL;
  return temp;
}
inline void A2Utruckdepart::set_allocated_tr(::au::Truck* tr) {
  delete tr_;
  tr_ = tr;
  if (tr) {
    set_has_tr();
  } else {
    clear_has_tr();
  }
  // @@protoc_insertion_point(field_set_allocated:au.A2Utruckdepart.tr)
}

// -------------------------------------------------------------------

// A2U

// repeated .au.A2Upickuprequest pr = 1;
inline int A2U::pr_size() const {
  return pr_.size();
}
inline void A2U::clear_pr() {
  pr_.Clear();
}
inline const ::au::A2Upickuprequest& A2U::pr(int index) const {
  // @@protoc_insertion_point(field_get:au.A2U.pr)
  return pr_.Get(index);
}
inline ::au::A2Upickuprequest* A2U::mutable_pr(int index) {
  // @@protoc_insertion_point(field_mutable:au.A2U.pr)
  return pr_.Mutable(index);
}
inline ::au::A2Upickuprequest* A2U::add_pr() {
  // @@protoc_insertion_point(field_add:au.A2U.pr)
  return pr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::au::A2Upickuprequest >&
A2U::pr() const {
  // @@protoc_insertion_point(field_list:au.A2U.pr)
  return pr_;
}
inline ::google::protobuf::RepeatedPtrField< ::au::A2Upickuprequest >*
A2U::mutable_pr() {
  // @@protoc_insertion_point(field_mutable_list:au.A2U.pr)
  return &pr_;
}

// repeated .au.A2Utruckdepart td = 2;
inline int A2U::td_size() const {
  return td_.size();
}
inline void A2U::clear_td() {
  td_.Clear();
}
inline const ::au::A2Utruckdepart& A2U::td(int index) const {
  // @@protoc_insertion_point(field_get:au.A2U.td)
  return td_.Get(index);
}
inline ::au::A2Utruckdepart* A2U::mutable_td(int index) {
  // @@protoc_insertion_point(field_mutable:au.A2U.td)
  return td_.Mutable(index);
}
inline ::au::A2Utruckdepart* A2U::add_td() {
  // @@protoc_insertion_point(field_add:au.A2U.td)
  return td_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::au::A2Utruckdepart >&
A2U::td() const {
  // @@protoc_insertion_point(field_list:au.A2U.td)
  return td_;
}
inline ::google::protobuf::RepeatedPtrField< ::au::A2Utruckdepart >*
A2U::mutable_td() {
  // @@protoc_insertion_point(field_mutable_list:au.A2U.td)
  return &td_;
}

// -------------------------------------------------------------------

// U2A

// repeated .au.U2Agenpid gp = 1;
inline int U2A::gp_size() const {
  return gp_.size();
}
inline void U2A::clear_gp() {
  gp_.Clear();
}
inline const ::au::U2Agenpid& U2A::gp(int index) const {
  // @@protoc_insertion_point(field_get:au.U2A.gp)
  return gp_.Get(index);
}
inline ::au::U2Agenpid* U2A::mutable_gp(int index) {
  // @@protoc_insertion_point(field_mutable:au.U2A.gp)
  return gp_.Mutable(index);
}
inline ::au::U2Agenpid* U2A::add_gp() {
  // @@protoc_insertion_point(field_add:au.U2A.gp)
  return gp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::au::U2Agenpid >&
U2A::gp() const {
  // @@protoc_insertion_point(field_list:au.U2A.gp)
  return gp_;
}
inline ::google::protobuf::RepeatedPtrField< ::au::U2Agenpid >*
U2A::mutable_gp() {
  // @@protoc_insertion_point(field_mutable_list:au.U2A.gp)
  return &gp_;
}

// repeated .au.U2Atruckarrive ta = 2;
inline int U2A::ta_size() const {
  return ta_.size();
}
inline void U2A::clear_ta() {
  ta_.Clear();
}
inline const ::au::U2Atruckarrive& U2A::ta(int index) const {
  // @@protoc_insertion_point(field_get:au.U2A.ta)
  return ta_.Get(index);
}
inline ::au::U2Atruckarrive* U2A::mutable_ta(int index) {
  // @@protoc_insertion_point(field_mutable:au.U2A.ta)
  return ta_.Mutable(index);
}
inline ::au::U2Atruckarrive* U2A::add_ta() {
  // @@protoc_insertion_point(field_add:au.U2A.ta)
  return ta_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::au::U2Atruckarrive >&
U2A::ta() const {
  // @@protoc_insertion_point(field_list:au.U2A.ta)
  return ta_;
}
inline ::google::protobuf::RepeatedPtrField< ::au::U2Atruckarrive >*
U2A::mutable_ta() {
  // @@protoc_insertion_point(field_mutable_list:au.U2A.ta)
  return &ta_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace au

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_au_2eproto__INCLUDED
