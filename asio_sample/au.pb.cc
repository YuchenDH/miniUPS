// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: au.proto

#include "au.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Item>
      _instance;
} _Item_default_instance_;
class WarehouseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Warehouse>
      _instance;
} _Warehouse_default_instance_;
class TruckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Truck>
      _instance;
} _Truck_default_instance_;
class A2UpickuprequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A2Upickuprequest>
      _instance;
} _A2Upickuprequest_default_instance_;
class U2AgenpidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2Agenpid>
      _instance;
} _U2Agenpid_default_instance_;
class U2AtruckarriveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2Atruckarrive>
      _instance;
} _U2Atruckarrive_default_instance_;
class A2UtruckdepartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A2Utruckdepart>
      _instance;
} _A2Utruckdepart_default_instance_;
class A2UDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<A2U>
      _instance;
} _A2U_default_instance_;
class U2ADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<U2A>
      _instance;
} _U2A_default_instance_;
namespace protobuf_au_2eproto {
void InitDefaultsItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Item_default_instance_;
    new (ptr) ::Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Item::InitAsDefaultInstance();
}

void InitDefaultsItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemImpl);
}

void InitDefaultsWarehouseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Warehouse_default_instance_;
    new (ptr) ::Warehouse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Warehouse::InitAsDefaultInstance();
}

void InitDefaultsWarehouse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWarehouseImpl);
}

void InitDefaultsTruckImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Truck_default_instance_;
    new (ptr) ::Truck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Truck::InitAsDefaultInstance();
}

void InitDefaultsTruck() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTruckImpl);
}

void InitDefaultsA2UpickuprequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_au_2eproto::InitDefaultsItem();
  protobuf_au_2eproto::InitDefaultsWarehouse();
  {
    void* ptr = &::_A2Upickuprequest_default_instance_;
    new (ptr) ::A2Upickuprequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::A2Upickuprequest::InitAsDefaultInstance();
}

void InitDefaultsA2Upickuprequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA2UpickuprequestImpl);
}

void InitDefaultsU2AgenpidImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_U2Agenpid_default_instance_;
    new (ptr) ::U2Agenpid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2Agenpid::InitAsDefaultInstance();
}

void InitDefaultsU2Agenpid() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsU2AgenpidImpl);
}

void InitDefaultsU2AtruckarriveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_au_2eproto::InitDefaultsTruck();
  {
    void* ptr = &::_U2Atruckarrive_default_instance_;
    new (ptr) ::U2Atruckarrive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2Atruckarrive::InitAsDefaultInstance();
}

void InitDefaultsU2Atruckarrive() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsU2AtruckarriveImpl);
}

void InitDefaultsA2UtruckdepartImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_au_2eproto::InitDefaultsTruck();
  {
    void* ptr = &::_A2Utruckdepart_default_instance_;
    new (ptr) ::A2Utruckdepart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::A2Utruckdepart::InitAsDefaultInstance();
}

void InitDefaultsA2Utruckdepart() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA2UtruckdepartImpl);
}

void InitDefaultsA2UImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_au_2eproto::InitDefaultsA2Upickuprequest();
  protobuf_au_2eproto::InitDefaultsA2Utruckdepart();
  {
    void* ptr = &::_A2U_default_instance_;
    new (ptr) ::A2U();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::A2U::InitAsDefaultInstance();
}

void InitDefaultsA2U() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsA2UImpl);
}

void InitDefaultsU2AImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_au_2eproto::InitDefaultsU2Agenpid();
  protobuf_au_2eproto::InitDefaultsU2Atruckarrive();
  {
    void* ptr = &::_U2A_default_instance_;
    new (ptr) ::U2A();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::U2A::InitAsDefaultInstance();
}

void InitDefaultsU2A() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsU2AImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, des_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Item, id_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Warehouse, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Truck, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Truck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Truck, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Truck, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Truck, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Upickuprequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Upickuprequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Upickuprequest, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Upickuprequest, wh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Upickuprequest, oid_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Agenpid, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Agenpid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Agenpid, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Agenpid, oid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Atruckarrive, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Atruckarrive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Atruckarrive, tr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Atruckarrive, oids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2Atruckarrive, whid_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Utruckdepart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Utruckdepart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2Utruckdepart, tr_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2U, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2U, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2U, pr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::A2U, td_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2A, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2A, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2A, gp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::U2A, ta_),
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::Item)},
  { 11, 19, sizeof(::Warehouse)},
  { 22, 30, sizeof(::Truck)},
  { 33, 41, sizeof(::A2Upickuprequest)},
  { 44, 51, sizeof(::U2Agenpid)},
  { 53, 61, sizeof(::U2Atruckarrive)},
  { 64, 70, sizeof(::A2Utruckdepart)},
  { 71, 78, sizeof(::A2U)},
  { 80, 87, sizeof(::U2A)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Warehouse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Truck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_A2Upickuprequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2Agenpid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2Atruckarrive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_A2Utruckdepart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_A2U_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_U2A_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "au.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010au.proto\".\n\004Item\022\013\n\003des\030\001 \002(\t\022\r\n\005count"
      "\030\002 \002(\005\022\n\n\002id\030\003 \001(\003\"-\n\tWarehouse\022\n\n\002id\030\001 "
      "\002(\005\022\t\n\001X\030\002 \002(\005\022\t\n\001Y\030\003 \002(\005\")\n\005Truck\022\n\n\002id"
      "\030\001 \002(\005\022\t\n\001X\030\002 \001(\005\022\t\n\001Y\030\003 \001(\005\"M\n\020A2Upicku"
      "prequest\022\024\n\005items\030\001 \003(\0132\005.Item\022\026\n\002wh\030\002 \002"
      "(\0132\n.Warehouse\022\013\n\003oid\030\003 \002(\003\"%\n\tU2Agenpid"
      "\022\013\n\003pid\030\001 \002(\003\022\013\n\003oid\030\002 \002(\003\"@\n\016U2Atruckar"
      "rive\022\022\n\002tr\030\001 \002(\0132\006.Truck\022\014\n\004oids\030\002 \003(\003\022\014"
      "\n\004whid\030\003 \002(\005\"$\n\016A2Utruckdepart\022\022\n\002tr\030\001 \002"
      "(\0132\006.Truck\"A\n\003A2U\022\035\n\002pr\030\001 \003(\0132\021.A2Upicku"
      "prequest\022\033\n\002td\030\002 \003(\0132\017.A2Utruckdepart\":\n"
      "\003U2A\022\026\n\002gp\030\001 \003(\0132\n.U2Agenpid\022\033\n\002ta\030\002 \003(\013"
      "2\017.U2Atruckarrive"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 497);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "au.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_au_2eproto

// ===================================================================

void Item::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item::kDesFieldNumber;
const int Item::kCountFieldNumber;
const int Item::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item::Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Item)
}
Item::Item(const Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_des()) {
    des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:Item)
}

void Item::SharedCtor() {
  _cached_size_ = 0;
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(count_));
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:Item)
  SharedDtor();
}

void Item::SharedDtor() {
  des_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Item& Item::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsItem();
  return *internal_default_instance();
}

Item* Item::New(::google::protobuf::Arena* arena) const {
  Item* n = new Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!des_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*des_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&count_) -
        reinterpret_cast<char*>(&id_)) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string des = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->des().data(), static_cast<int>(this->des().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Item.des");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string des = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), static_cast<int>(this->des().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Item.des");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->des(), output);
  }

  // required int32 count = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // optional int64 id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Item)
}

::google::protobuf::uint8* Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string des = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), static_cast<int>(this->des().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Item.des");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->des(), target);
  }

  // required int32 count = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // optional int64 id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Item)
  return target;
}

size_t Item::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Item)
  size_t total_size = 0;

  if (has_des()) {
    // required string des = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->des());
  }

  if (has_count()) {
    // required int32 count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string des = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->des());

    // required int32 count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int64 id = 3;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_des();
      des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  return true;
}

void Item::Swap(Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item::InternalSwap(Item* other) {
  using std::swap;
  des_.Swap(&other->des_);
  swap(id_, other->id_);
  swap(count_, other->count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Warehouse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Warehouse::kIdFieldNumber;
const int Warehouse::kXFieldNumber;
const int Warehouse::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Warehouse::Warehouse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsWarehouse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Warehouse)
}
Warehouse::Warehouse(const Warehouse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&id_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Warehouse)
}

void Warehouse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&id_)) + sizeof(y_));
}

Warehouse::~Warehouse() {
  // @@protoc_insertion_point(destructor:Warehouse)
  SharedDtor();
}

void Warehouse::SharedDtor() {
}

void Warehouse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Warehouse::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Warehouse& Warehouse::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsWarehouse();
  return *internal_default_instance();
}

Warehouse* Warehouse::New(::google::protobuf::Arena* arena) const {
  Warehouse* n = new Warehouse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Warehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:Warehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&id_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Warehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Warehouse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 X = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Warehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Warehouse)
  return false;
#undef DO_
}

void Warehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Warehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 X = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 Y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Warehouse)
}

::google::protobuf::uint8* Warehouse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Warehouse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 X = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 Y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Warehouse)
  return target;
}

size_t Warehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Warehouse)
  size_t total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_x()) {
    // required int32 X = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 Y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
size_t Warehouse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Warehouse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 X = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 Y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Warehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Warehouse)
  GOOGLE_DCHECK_NE(&from, this);
  const Warehouse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Warehouse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Warehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Warehouse)
    MergeFrom(*source);
  }
}

void Warehouse::MergeFrom(const Warehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Warehouse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Warehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Warehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Warehouse::CopyFrom(const Warehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Warehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Warehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Warehouse::Swap(Warehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Warehouse::InternalSwap(Warehouse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Warehouse::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Truck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Truck::kIdFieldNumber;
const int Truck::kXFieldNumber;
const int Truck::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Truck::Truck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsTruck();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Truck)
}
Truck::Truck(const Truck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&id_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Truck)
}

void Truck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&id_)) + sizeof(y_));
}

Truck::~Truck() {
  // @@protoc_insertion_point(destructor:Truck)
  SharedDtor();
}

void Truck::SharedDtor() {
}

void Truck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Truck::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Truck& Truck::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsTruck();
  return *internal_default_instance();
}

Truck* Truck::New(::google::protobuf::Arena* arena) const {
  Truck* n = new Truck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Truck::Clear() {
// @@protoc_insertion_point(message_clear_start:Truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&id_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Truck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Truck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 X = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Truck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Truck)
  return false;
#undef DO_
}

void Truck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 X = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // optional int32 Y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Truck)
}

::google::protobuf::uint8* Truck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Truck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 X = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // optional int32 Y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Truck)
  return target;
}

size_t Truck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Truck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional int32 X = 2;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 Y = 3;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Truck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Truck)
  GOOGLE_DCHECK_NE(&from, this);
  const Truck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Truck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Truck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Truck)
    MergeFrom(*source);
  }
}

void Truck::MergeFrom(const Truck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Truck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Truck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Truck::CopyFrom(const Truck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Truck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Truck::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Truck::Swap(Truck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Truck::InternalSwap(Truck* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Truck::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A2Upickuprequest::InitAsDefaultInstance() {
  ::_A2Upickuprequest_default_instance_._instance.get_mutable()->wh_ = const_cast< ::Warehouse*>(
      ::Warehouse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A2Upickuprequest::kItemsFieldNumber;
const int A2Upickuprequest::kWhFieldNumber;
const int A2Upickuprequest::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A2Upickuprequest::A2Upickuprequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsA2Upickuprequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:A2Upickuprequest)
}
A2Upickuprequest::A2Upickuprequest(const A2Upickuprequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_wh()) {
    wh_ = new ::Warehouse(*from.wh_);
  } else {
    wh_ = NULL;
  }
  oid_ = from.oid_;
  // @@protoc_insertion_point(copy_constructor:A2Upickuprequest)
}

void A2Upickuprequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&wh_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oid_) -
      reinterpret_cast<char*>(&wh_)) + sizeof(oid_));
}

A2Upickuprequest::~A2Upickuprequest() {
  // @@protoc_insertion_point(destructor:A2Upickuprequest)
  SharedDtor();
}

void A2Upickuprequest::SharedDtor() {
  if (this != internal_default_instance()) delete wh_;
}

void A2Upickuprequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A2Upickuprequest::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A2Upickuprequest& A2Upickuprequest::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsA2Upickuprequest();
  return *internal_default_instance();
}

A2Upickuprequest* A2Upickuprequest::New(::google::protobuf::Arena* arena) const {
  A2Upickuprequest* n = new A2Upickuprequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A2Upickuprequest::Clear() {
// @@protoc_insertion_point(message_clear_start:A2Upickuprequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(wh_ != NULL);
    wh_->Clear();
  }
  oid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool A2Upickuprequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A2Upickuprequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Item items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Warehouse wh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wh()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 oid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_oid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A2Upickuprequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A2Upickuprequest)
  return false;
#undef DO_
}

void A2Upickuprequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A2Upickuprequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required .Warehouse wh = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->wh_, output);
  }

  // required int64 oid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->oid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A2Upickuprequest)
}

::google::protobuf::uint8* A2Upickuprequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:A2Upickuprequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Item items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required .Warehouse wh = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->wh_, deterministic, target);
  }

  // required int64 oid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->oid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A2Upickuprequest)
  return target;
}

size_t A2Upickuprequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:A2Upickuprequest)
  size_t total_size = 0;

  if (has_wh()) {
    // required .Warehouse wh = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->wh_);
  }

  if (has_oid()) {
    // required int64 oid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oid());
  }

  return total_size;
}
size_t A2Upickuprequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:A2Upickuprequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Warehouse wh = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->wh_);

    // required int64 oid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Item items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A2Upickuprequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A2Upickuprequest)
  GOOGLE_DCHECK_NE(&from, this);
  const A2Upickuprequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A2Upickuprequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A2Upickuprequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A2Upickuprequest)
    MergeFrom(*source);
  }
}

void A2Upickuprequest::MergeFrom(const A2Upickuprequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A2Upickuprequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_wh()->::Warehouse::MergeFrom(from.wh());
    }
    if (cached_has_bits & 0x00000002u) {
      oid_ = from.oid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void A2Upickuprequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A2Upickuprequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A2Upickuprequest::CopyFrom(const A2Upickuprequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A2Upickuprequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A2Upickuprequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  if (has_wh()) {
    if (!this->wh_->IsInitialized()) return false;
  }
  return true;
}

void A2Upickuprequest::Swap(A2Upickuprequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A2Upickuprequest::InternalSwap(A2Upickuprequest* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  swap(wh_, other->wh_);
  swap(oid_, other->oid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A2Upickuprequest::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void U2Agenpid::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2Agenpid::kPidFieldNumber;
const int U2Agenpid::kOidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2Agenpid::U2Agenpid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsU2Agenpid();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2Agenpid)
}
U2Agenpid::U2Agenpid(const U2Agenpid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pid_, &from.pid_,
    static_cast<size_t>(reinterpret_cast<char*>(&oid_) -
    reinterpret_cast<char*>(&pid_)) + sizeof(oid_));
  // @@protoc_insertion_point(copy_constructor:U2Agenpid)
}

void U2Agenpid::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oid_) -
      reinterpret_cast<char*>(&pid_)) + sizeof(oid_));
}

U2Agenpid::~U2Agenpid() {
  // @@protoc_insertion_point(destructor:U2Agenpid)
  SharedDtor();
}

void U2Agenpid::SharedDtor() {
}

void U2Agenpid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* U2Agenpid::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const U2Agenpid& U2Agenpid::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsU2Agenpid();
  return *internal_default_instance();
}

U2Agenpid* U2Agenpid::New(::google::protobuf::Arena* arena) const {
  U2Agenpid* n = new U2Agenpid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void U2Agenpid::Clear() {
// @@protoc_insertion_point(message_clear_start:U2Agenpid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&pid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&oid_) -
        reinterpret_cast<char*>(&pid_)) + sizeof(oid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool U2Agenpid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2Agenpid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 pid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 oid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_oid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &oid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2Agenpid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2Agenpid)
  return false;
#undef DO_
}

void U2Agenpid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2Agenpid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pid(), output);
  }

  // required int64 oid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->oid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2Agenpid)
}

::google::protobuf::uint8* U2Agenpid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:U2Agenpid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 pid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pid(), target);
  }

  // required int64 oid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->oid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2Agenpid)
  return target;
}

size_t U2Agenpid::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:U2Agenpid)
  size_t total_size = 0;

  if (has_pid()) {
    // required int64 pid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pid());
  }

  if (has_oid()) {
    // required int64 oid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oid());
  }

  return total_size;
}
size_t U2Agenpid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2Agenpid)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 pid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->pid());

    // required int64 oid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->oid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void U2Agenpid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2Agenpid)
  GOOGLE_DCHECK_NE(&from, this);
  const U2Agenpid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const U2Agenpid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2Agenpid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2Agenpid)
    MergeFrom(*source);
  }
}

void U2Agenpid::MergeFrom(const U2Agenpid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2Agenpid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000002u) {
      oid_ = from.oid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void U2Agenpid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2Agenpid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2Agenpid::CopyFrom(const U2Agenpid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2Agenpid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2Agenpid::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void U2Agenpid::Swap(U2Agenpid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2Agenpid::InternalSwap(U2Agenpid* other) {
  using std::swap;
  swap(pid_, other->pid_);
  swap(oid_, other->oid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata U2Agenpid::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void U2Atruckarrive::InitAsDefaultInstance() {
  ::_U2Atruckarrive_default_instance_._instance.get_mutable()->tr_ = const_cast< ::Truck*>(
      ::Truck::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2Atruckarrive::kTrFieldNumber;
const int U2Atruckarrive::kOidsFieldNumber;
const int U2Atruckarrive::kWhidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2Atruckarrive::U2Atruckarrive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsU2Atruckarrive();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2Atruckarrive)
}
U2Atruckarrive::U2Atruckarrive(const U2Atruckarrive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      oids_(from.oids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tr()) {
    tr_ = new ::Truck(*from.tr_);
  } else {
    tr_ = NULL;
  }
  whid_ = from.whid_;
  // @@protoc_insertion_point(copy_constructor:U2Atruckarrive)
}

void U2Atruckarrive::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&tr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&whid_) -
      reinterpret_cast<char*>(&tr_)) + sizeof(whid_));
}

U2Atruckarrive::~U2Atruckarrive() {
  // @@protoc_insertion_point(destructor:U2Atruckarrive)
  SharedDtor();
}

void U2Atruckarrive::SharedDtor() {
  if (this != internal_default_instance()) delete tr_;
}

void U2Atruckarrive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* U2Atruckarrive::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const U2Atruckarrive& U2Atruckarrive::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsU2Atruckarrive();
  return *internal_default_instance();
}

U2Atruckarrive* U2Atruckarrive::New(::google::protobuf::Arena* arena) const {
  U2Atruckarrive* n = new U2Atruckarrive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void U2Atruckarrive::Clear() {
// @@protoc_insertion_point(message_clear_start:U2Atruckarrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(tr_ != NULL);
    tr_->Clear();
  }
  whid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool U2Atruckarrive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2Atruckarrive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Truck tr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 oids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16u, input, this->mutable_oids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_oids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 whid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_whid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2Atruckarrive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2Atruckarrive)
  return false;
#undef DO_
}

void U2Atruckarrive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2Atruckarrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Truck tr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->tr_, output);
  }

  // repeated int64 oids = 2;
  for (int i = 0, n = this->oids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->oids(i), output);
  }

  // required int32 whid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->whid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2Atruckarrive)
}

::google::protobuf::uint8* U2Atruckarrive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:U2Atruckarrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Truck tr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->tr_, deterministic, target);
  }

  // repeated int64 oids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(2, this->oids_, target);

  // required int32 whid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->whid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2Atruckarrive)
  return target;
}

size_t U2Atruckarrive::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:U2Atruckarrive)
  size_t total_size = 0;

  if (has_tr()) {
    // required .Truck tr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tr_);
  }

  if (has_whid()) {
    // required int32 whid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());
  }

  return total_size;
}
size_t U2Atruckarrive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2Atruckarrive)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Truck tr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tr_);

    // required int32 whid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated int64 oids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->oids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->oids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void U2Atruckarrive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2Atruckarrive)
  GOOGLE_DCHECK_NE(&from, this);
  const U2Atruckarrive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const U2Atruckarrive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2Atruckarrive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2Atruckarrive)
    MergeFrom(*source);
  }
}

void U2Atruckarrive::MergeFrom(const U2Atruckarrive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2Atruckarrive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  oids_.MergeFrom(from.oids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_tr()->::Truck::MergeFrom(from.tr());
    }
    if (cached_has_bits & 0x00000002u) {
      whid_ = from.whid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void U2Atruckarrive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2Atruckarrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2Atruckarrive::CopyFrom(const U2Atruckarrive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2Atruckarrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2Atruckarrive::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_tr()) {
    if (!this->tr_->IsInitialized()) return false;
  }
  return true;
}

void U2Atruckarrive::Swap(U2Atruckarrive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2Atruckarrive::InternalSwap(U2Atruckarrive* other) {
  using std::swap;
  oids_.InternalSwap(&other->oids_);
  swap(tr_, other->tr_);
  swap(whid_, other->whid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata U2Atruckarrive::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A2Utruckdepart::InitAsDefaultInstance() {
  ::_A2Utruckdepart_default_instance_._instance.get_mutable()->tr_ = const_cast< ::Truck*>(
      ::Truck::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A2Utruckdepart::kTrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A2Utruckdepart::A2Utruckdepart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsA2Utruckdepart();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:A2Utruckdepart)
}
A2Utruckdepart::A2Utruckdepart(const A2Utruckdepart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tr()) {
    tr_ = new ::Truck(*from.tr_);
  } else {
    tr_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:A2Utruckdepart)
}

void A2Utruckdepart::SharedCtor() {
  _cached_size_ = 0;
  tr_ = NULL;
}

A2Utruckdepart::~A2Utruckdepart() {
  // @@protoc_insertion_point(destructor:A2Utruckdepart)
  SharedDtor();
}

void A2Utruckdepart::SharedDtor() {
  if (this != internal_default_instance()) delete tr_;
}

void A2Utruckdepart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A2Utruckdepart::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A2Utruckdepart& A2Utruckdepart::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsA2Utruckdepart();
  return *internal_default_instance();
}

A2Utruckdepart* A2Utruckdepart::New(::google::protobuf::Arena* arena) const {
  A2Utruckdepart* n = new A2Utruckdepart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A2Utruckdepart::Clear() {
// @@protoc_insertion_point(message_clear_start:A2Utruckdepart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(tr_ != NULL);
    tr_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool A2Utruckdepart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A2Utruckdepart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Truck tr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A2Utruckdepart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A2Utruckdepart)
  return false;
#undef DO_
}

void A2Utruckdepart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A2Utruckdepart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Truck tr = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->tr_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A2Utruckdepart)
}

::google::protobuf::uint8* A2Utruckdepart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:A2Utruckdepart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Truck tr = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->tr_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A2Utruckdepart)
  return target;
}

size_t A2Utruckdepart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:A2Utruckdepart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Truck tr = 1;
  if (has_tr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tr_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A2Utruckdepart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A2Utruckdepart)
  GOOGLE_DCHECK_NE(&from, this);
  const A2Utruckdepart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A2Utruckdepart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A2Utruckdepart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A2Utruckdepart)
    MergeFrom(*source);
  }
}

void A2Utruckdepart::MergeFrom(const A2Utruckdepart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A2Utruckdepart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tr()) {
    mutable_tr()->::Truck::MergeFrom(from.tr());
  }
}

void A2Utruckdepart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A2Utruckdepart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A2Utruckdepart::CopyFrom(const A2Utruckdepart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A2Utruckdepart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A2Utruckdepart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_tr()) {
    if (!this->tr_->IsInitialized()) return false;
  }
  return true;
}

void A2Utruckdepart::Swap(A2Utruckdepart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A2Utruckdepart::InternalSwap(A2Utruckdepart* other) {
  using std::swap;
  swap(tr_, other->tr_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A2Utruckdepart::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void A2U::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A2U::kPrFieldNumber;
const int A2U::kTdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A2U::A2U()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsA2U();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:A2U)
}
A2U::A2U(const A2U& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pr_(from.pr_),
      td_(from.td_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:A2U)
}

void A2U::SharedCtor() {
  _cached_size_ = 0;
}

A2U::~A2U() {
  // @@protoc_insertion_point(destructor:A2U)
  SharedDtor();
}

void A2U::SharedDtor() {
}

void A2U::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A2U::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const A2U& A2U::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsA2U();
  return *internal_default_instance();
}

A2U* A2U::New(::google::protobuf::Arena* arena) const {
  A2U* n = new A2U;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A2U::Clear() {
// @@protoc_insertion_point(message_clear_start:A2U)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pr_.Clear();
  td_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool A2U::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A2U)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .A2Upickuprequest pr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .A2Utruckdepart td = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_td()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A2U)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A2U)
  return false;
#undef DO_
}

void A2U::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A2U)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .A2Upickuprequest pr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pr(static_cast<int>(i)), output);
  }

  // repeated .A2Utruckdepart td = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->td_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->td(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A2U)
}

::google::protobuf::uint8* A2U::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:A2U)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .A2Upickuprequest pr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pr(static_cast<int>(i)), deterministic, target);
  }

  // repeated .A2Utruckdepart td = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->td_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->td(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A2U)
  return target;
}

size_t A2U::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:A2U)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .A2Upickuprequest pr = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pr(static_cast<int>(i)));
    }
  }

  // repeated .A2Utruckdepart td = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->td_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->td(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A2U::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A2U)
  GOOGLE_DCHECK_NE(&from, this);
  const A2U* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const A2U>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A2U)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A2U)
    MergeFrom(*source);
  }
}

void A2U::MergeFrom(const A2U& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A2U)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pr_.MergeFrom(from.pr_);
  td_.MergeFrom(from.td_);
}

void A2U::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A2U)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A2U::CopyFrom(const A2U& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A2U)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A2U::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pr())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->td())) return false;
  return true;
}

void A2U::Swap(A2U* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A2U::InternalSwap(A2U* other) {
  using std::swap;
  pr_.InternalSwap(&other->pr_);
  td_.InternalSwap(&other->td_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A2U::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void U2A::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int U2A::kGpFieldNumber;
const int U2A::kTaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

U2A::U2A()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_au_2eproto::InitDefaultsU2A();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:U2A)
}
U2A::U2A(const U2A& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gp_(from.gp_),
      ta_(from.ta_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:U2A)
}

void U2A::SharedCtor() {
  _cached_size_ = 0;
}

U2A::~U2A() {
  // @@protoc_insertion_point(destructor:U2A)
  SharedDtor();
}

void U2A::SharedDtor() {
}

void U2A::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* U2A::descriptor() {
  ::protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const U2A& U2A::default_instance() {
  ::protobuf_au_2eproto::InitDefaultsU2A();
  return *internal_default_instance();
}

U2A* U2A::New(::google::protobuf::Arena* arena) const {
  U2A* n = new U2A;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void U2A::Clear() {
// @@protoc_insertion_point(message_clear_start:U2A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gp_.Clear();
  ta_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool U2A::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:U2A)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .U2Agenpid gp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_gp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .U2Atruckarrive ta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:U2A)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:U2A)
  return false;
#undef DO_
}

void U2A::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:U2A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .U2Agenpid gp = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gp(static_cast<int>(i)), output);
  }

  // repeated .U2Atruckarrive ta = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ta_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ta(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:U2A)
}

::google::protobuf::uint8* U2A::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:U2A)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .U2Agenpid gp = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->gp(static_cast<int>(i)), deterministic, target);
  }

  // repeated .U2Atruckarrive ta = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ta_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ta(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:U2A)
  return target;
}

size_t U2A::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:U2A)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .U2Agenpid gp = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->gp_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gp(static_cast<int>(i)));
    }
  }

  // repeated .U2Atruckarrive ta = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ta_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ta(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void U2A::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:U2A)
  GOOGLE_DCHECK_NE(&from, this);
  const U2A* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const U2A>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:U2A)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:U2A)
    MergeFrom(*source);
  }
}

void U2A::MergeFrom(const U2A& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:U2A)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gp_.MergeFrom(from.gp_);
  ta_.MergeFrom(from.ta_);
}

void U2A::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:U2A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void U2A::CopyFrom(const U2A& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:U2A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool U2A::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->gp())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ta())) return false;
  return true;
}

void U2A::Swap(U2A* other) {
  if (other == this) return;
  InternalSwap(other);
}
void U2A::InternalSwap(U2A* other) {
  using std::swap;
  gp_.InternalSwap(&other->gp_);
  ta_.InternalSwap(&other->ta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata U2A::GetMetadata() const {
  protobuf_au_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_au_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
