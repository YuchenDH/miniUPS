// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: au.proto

#ifndef PROTOBUF_au_2eproto__INCLUDED
#define PROTOBUF_au_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_au_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsItemImpl();
void InitDefaultsItem();
void InitDefaultsWarehouseImpl();
void InitDefaultsWarehouse();
void InitDefaultsTruckImpl();
void InitDefaultsTruck();
void InitDefaultsA2UpickuprequestImpl();
void InitDefaultsA2Upickuprequest();
void InitDefaultsU2AgenpidImpl();
void InitDefaultsU2Agenpid();
void InitDefaultsU2AtruckarriveImpl();
void InitDefaultsU2Atruckarrive();
void InitDefaultsA2UtruckdepartImpl();
void InitDefaultsA2Utruckdepart();
void InitDefaultsA2UImpl();
void InitDefaultsA2U();
void InitDefaultsU2AImpl();
void InitDefaultsU2A();
inline void InitDefaults() {
  InitDefaultsItem();
  InitDefaultsWarehouse();
  InitDefaultsTruck();
  InitDefaultsA2Upickuprequest();
  InitDefaultsU2Agenpid();
  InitDefaultsU2Atruckarrive();
  InitDefaultsA2Utruckdepart();
  InitDefaultsA2U();
  InitDefaultsU2A();
}
}  // namespace protobuf_au_2eproto
class A2U;
class A2UDefaultTypeInternal;
extern A2UDefaultTypeInternal _A2U_default_instance_;
class A2Upickuprequest;
class A2UpickuprequestDefaultTypeInternal;
extern A2UpickuprequestDefaultTypeInternal _A2Upickuprequest_default_instance_;
class A2Utruckdepart;
class A2UtruckdepartDefaultTypeInternal;
extern A2UtruckdepartDefaultTypeInternal _A2Utruckdepart_default_instance_;
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class Truck;
class TruckDefaultTypeInternal;
extern TruckDefaultTypeInternal _Truck_default_instance_;
class U2A;
class U2ADefaultTypeInternal;
extern U2ADefaultTypeInternal _U2A_default_instance_;
class U2Agenpid;
class U2AgenpidDefaultTypeInternal;
extern U2AgenpidDefaultTypeInternal _U2Agenpid_default_instance_;
class U2Atruckarrive;
class U2AtruckarriveDefaultTypeInternal;
extern U2AtruckarriveDefaultTypeInternal _U2Atruckarrive_default_instance_;
class Warehouse;
class WarehouseDefaultTypeInternal;
extern WarehouseDefaultTypeInternal _Warehouse_default_instance_;

// ===================================================================

class Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Item* other);
  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string des = 1;
  bool has_des() const;
  void clear_des();
  static const int kDesFieldNumber = 1;
  const ::std::string& des() const;
  void set_des(const ::std::string& value);
  #if LANG_CXX11
  void set_des(::std::string&& value);
  #endif
  void set_des(const char* value);
  void set_des(const char* value, size_t size);
  ::std::string* mutable_des();
  ::std::string* release_des();
  void set_allocated_des(::std::string* des);

  // optional int64 id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // required int32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Item)
 private:
  void set_has_des();
  void clear_has_des();
  void set_has_count();
  void clear_has_count();
  void set_has_id();
  void clear_has_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr des_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 count_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsItemImpl();
};
// -------------------------------------------------------------------

class Warehouse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Warehouse) */ {
 public:
  Warehouse();
  virtual ~Warehouse();

  Warehouse(const Warehouse& from);

  inline Warehouse& operator=(const Warehouse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Warehouse(Warehouse&& from) noexcept
    : Warehouse() {
    *this = ::std::move(from);
  }

  inline Warehouse& operator=(Warehouse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Warehouse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Warehouse* internal_default_instance() {
    return reinterpret_cast<const Warehouse*>(
               &_Warehouse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Warehouse* other);
  friend void swap(Warehouse& a, Warehouse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Warehouse* New() const PROTOBUF_FINAL { return New(NULL); }

  Warehouse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Warehouse& from);
  void MergeFrom(const Warehouse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Warehouse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 X = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 Y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Warehouse)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsWarehouseImpl();
};
// -------------------------------------------------------------------

class Truck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Truck) */ {
 public:
  Truck();
  virtual ~Truck();

  Truck(const Truck& from);

  inline Truck& operator=(const Truck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Truck(Truck&& from) noexcept
    : Truck() {
    *this = ::std::move(from);
  }

  inline Truck& operator=(Truck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Truck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Truck* internal_default_instance() {
    return reinterpret_cast<const Truck*>(
               &_Truck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Truck* other);
  friend void swap(Truck& a, Truck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Truck* New() const PROTOBUF_FINAL { return New(NULL); }

  Truck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Truck& from);
  void MergeFrom(const Truck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Truck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 X = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 Y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Truck)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsTruckImpl();
};
// -------------------------------------------------------------------

class A2Upickuprequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:A2Upickuprequest) */ {
 public:
  A2Upickuprequest();
  virtual ~A2Upickuprequest();

  A2Upickuprequest(const A2Upickuprequest& from);

  inline A2Upickuprequest& operator=(const A2Upickuprequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A2Upickuprequest(A2Upickuprequest&& from) noexcept
    : A2Upickuprequest() {
    *this = ::std::move(from);
  }

  inline A2Upickuprequest& operator=(A2Upickuprequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2Upickuprequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A2Upickuprequest* internal_default_instance() {
    return reinterpret_cast<const A2Upickuprequest*>(
               &_A2Upickuprequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(A2Upickuprequest* other);
  friend void swap(A2Upickuprequest& a, A2Upickuprequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A2Upickuprequest* New() const PROTOBUF_FINAL { return New(NULL); }

  A2Upickuprequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A2Upickuprequest& from);
  void MergeFrom(const A2Upickuprequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A2Upickuprequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Item items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::Item& items(int index) const;
  ::Item* mutable_items(int index);
  ::Item* add_items();
  ::google::protobuf::RepeatedPtrField< ::Item >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::Item >&
      items() const;

  // required .Warehouse wh = 2;
  bool has_wh() const;
  void clear_wh();
  static const int kWhFieldNumber = 2;
  const ::Warehouse& wh() const;
  ::Warehouse* release_wh();
  ::Warehouse* mutable_wh();
  void set_allocated_wh(::Warehouse* wh);

  // required int64 oid = 3;
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 3;
  ::google::protobuf::int64 oid() const;
  void set_oid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:A2Upickuprequest)
 private:
  void set_has_wh();
  void clear_has_wh();
  void set_has_oid();
  void clear_has_oid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Item > items_;
  ::Warehouse* wh_;
  ::google::protobuf::int64 oid_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsA2UpickuprequestImpl();
};
// -------------------------------------------------------------------

class U2Agenpid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:U2Agenpid) */ {
 public:
  U2Agenpid();
  virtual ~U2Agenpid();

  U2Agenpid(const U2Agenpid& from);

  inline U2Agenpid& operator=(const U2Agenpid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  U2Agenpid(U2Agenpid&& from) noexcept
    : U2Agenpid() {
    *this = ::std::move(from);
  }

  inline U2Agenpid& operator=(U2Agenpid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const U2Agenpid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const U2Agenpid* internal_default_instance() {
    return reinterpret_cast<const U2Agenpid*>(
               &_U2Agenpid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(U2Agenpid* other);
  friend void swap(U2Agenpid& a, U2Agenpid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline U2Agenpid* New() const PROTOBUF_FINAL { return New(NULL); }

  U2Agenpid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const U2Agenpid& from);
  void MergeFrom(const U2Agenpid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(U2Agenpid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 pid = 1;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::int64 pid() const;
  void set_pid(::google::protobuf::int64 value);

  // required int64 oid = 2;
  bool has_oid() const;
  void clear_oid();
  static const int kOidFieldNumber = 2;
  ::google::protobuf::int64 oid() const;
  void set_oid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:U2Agenpid)
 private:
  void set_has_pid();
  void clear_has_pid();
  void set_has_oid();
  void clear_has_oid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 pid_;
  ::google::protobuf::int64 oid_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsU2AgenpidImpl();
};
// -------------------------------------------------------------------

class U2Atruckarrive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:U2Atruckarrive) */ {
 public:
  U2Atruckarrive();
  virtual ~U2Atruckarrive();

  U2Atruckarrive(const U2Atruckarrive& from);

  inline U2Atruckarrive& operator=(const U2Atruckarrive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  U2Atruckarrive(U2Atruckarrive&& from) noexcept
    : U2Atruckarrive() {
    *this = ::std::move(from);
  }

  inline U2Atruckarrive& operator=(U2Atruckarrive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const U2Atruckarrive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const U2Atruckarrive* internal_default_instance() {
    return reinterpret_cast<const U2Atruckarrive*>(
               &_U2Atruckarrive_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(U2Atruckarrive* other);
  friend void swap(U2Atruckarrive& a, U2Atruckarrive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline U2Atruckarrive* New() const PROTOBUF_FINAL { return New(NULL); }

  U2Atruckarrive* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const U2Atruckarrive& from);
  void MergeFrom(const U2Atruckarrive& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(U2Atruckarrive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 oids = 2;
  int oids_size() const;
  void clear_oids();
  static const int kOidsFieldNumber = 2;
  ::google::protobuf::int64 oids(int index) const;
  void set_oids(int index, ::google::protobuf::int64 value);
  void add_oids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      oids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_oids();

  // required .Truck tr = 1;
  bool has_tr() const;
  void clear_tr();
  static const int kTrFieldNumber = 1;
  const ::Truck& tr() const;
  ::Truck* release_tr();
  ::Truck* mutable_tr();
  void set_allocated_tr(::Truck* tr);

  // required int32 whid = 3;
  bool has_whid() const;
  void clear_whid();
  static const int kWhidFieldNumber = 3;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:U2Atruckarrive)
 private:
  void set_has_tr();
  void clear_has_tr();
  void set_has_whid();
  void clear_has_whid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > oids_;
  ::Truck* tr_;
  ::google::protobuf::int32 whid_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsU2AtruckarriveImpl();
};
// -------------------------------------------------------------------

class A2Utruckdepart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:A2Utruckdepart) */ {
 public:
  A2Utruckdepart();
  virtual ~A2Utruckdepart();

  A2Utruckdepart(const A2Utruckdepart& from);

  inline A2Utruckdepart& operator=(const A2Utruckdepart& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A2Utruckdepart(A2Utruckdepart&& from) noexcept
    : A2Utruckdepart() {
    *this = ::std::move(from);
  }

  inline A2Utruckdepart& operator=(A2Utruckdepart&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2Utruckdepart& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A2Utruckdepart* internal_default_instance() {
    return reinterpret_cast<const A2Utruckdepart*>(
               &_A2Utruckdepart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(A2Utruckdepart* other);
  friend void swap(A2Utruckdepart& a, A2Utruckdepart& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A2Utruckdepart* New() const PROTOBUF_FINAL { return New(NULL); }

  A2Utruckdepart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A2Utruckdepart& from);
  void MergeFrom(const A2Utruckdepart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A2Utruckdepart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Truck tr = 1;
  bool has_tr() const;
  void clear_tr();
  static const int kTrFieldNumber = 1;
  const ::Truck& tr() const;
  ::Truck* release_tr();
  ::Truck* mutable_tr();
  void set_allocated_tr(::Truck* tr);

  // @@protoc_insertion_point(class_scope:A2Utruckdepart)
 private:
  void set_has_tr();
  void clear_has_tr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Truck* tr_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsA2UtruckdepartImpl();
};
// -------------------------------------------------------------------

class A2U : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:A2U) */ {
 public:
  A2U();
  virtual ~A2U();

  A2U(const A2U& from);

  inline A2U& operator=(const A2U& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  A2U(A2U&& from) noexcept
    : A2U() {
    *this = ::std::move(from);
  }

  inline A2U& operator=(A2U&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const A2U& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const A2U* internal_default_instance() {
    return reinterpret_cast<const A2U*>(
               &_A2U_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(A2U* other);
  friend void swap(A2U& a, A2U& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline A2U* New() const PROTOBUF_FINAL { return New(NULL); }

  A2U* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const A2U& from);
  void MergeFrom(const A2U& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(A2U* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .A2Upickuprequest pr = 1;
  int pr_size() const;
  void clear_pr();
  static const int kPrFieldNumber = 1;
  const ::A2Upickuprequest& pr(int index) const;
  ::A2Upickuprequest* mutable_pr(int index);
  ::A2Upickuprequest* add_pr();
  ::google::protobuf::RepeatedPtrField< ::A2Upickuprequest >*
      mutable_pr();
  const ::google::protobuf::RepeatedPtrField< ::A2Upickuprequest >&
      pr() const;

  // repeated .A2Utruckdepart td = 2;
  int td_size() const;
  void clear_td();
  static const int kTdFieldNumber = 2;
  const ::A2Utruckdepart& td(int index) const;
  ::A2Utruckdepart* mutable_td(int index);
  ::A2Utruckdepart* add_td();
  ::google::protobuf::RepeatedPtrField< ::A2Utruckdepart >*
      mutable_td();
  const ::google::protobuf::RepeatedPtrField< ::A2Utruckdepart >&
      td() const;

  // @@protoc_insertion_point(class_scope:A2U)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::A2Upickuprequest > pr_;
  ::google::protobuf::RepeatedPtrField< ::A2Utruckdepart > td_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsA2UImpl();
};
// -------------------------------------------------------------------

class U2A : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:U2A) */ {
 public:
  U2A();
  virtual ~U2A();

  U2A(const U2A& from);

  inline U2A& operator=(const U2A& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  U2A(U2A&& from) noexcept
    : U2A() {
    *this = ::std::move(from);
  }

  inline U2A& operator=(U2A&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const U2A& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const U2A* internal_default_instance() {
    return reinterpret_cast<const U2A*>(
               &_U2A_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(U2A* other);
  friend void swap(U2A& a, U2A& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline U2A* New() const PROTOBUF_FINAL { return New(NULL); }

  U2A* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const U2A& from);
  void MergeFrom(const U2A& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(U2A* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .U2Agenpid gp = 1;
  int gp_size() const;
  void clear_gp();
  static const int kGpFieldNumber = 1;
  const ::U2Agenpid& gp(int index) const;
  ::U2Agenpid* mutable_gp(int index);
  ::U2Agenpid* add_gp();
  ::google::protobuf::RepeatedPtrField< ::U2Agenpid >*
      mutable_gp();
  const ::google::protobuf::RepeatedPtrField< ::U2Agenpid >&
      gp() const;

  // repeated .U2Atruckarrive ta = 2;
  int ta_size() const;
  void clear_ta();
  static const int kTaFieldNumber = 2;
  const ::U2Atruckarrive& ta(int index) const;
  ::U2Atruckarrive* mutable_ta(int index);
  ::U2Atruckarrive* add_ta();
  ::google::protobuf::RepeatedPtrField< ::U2Atruckarrive >*
      mutable_ta();
  const ::google::protobuf::RepeatedPtrField< ::U2Atruckarrive >&
      ta() const;

  // @@protoc_insertion_point(class_scope:U2A)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::U2Agenpid > gp_;
  ::google::protobuf::RepeatedPtrField< ::U2Atruckarrive > ta_;
  friend struct ::protobuf_au_2eproto::TableStruct;
  friend void ::protobuf_au_2eproto::InitDefaultsU2AImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Item

// required string des = 1;
inline bool Item::has_des() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Item::set_has_des() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Item::clear_has_des() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Item::clear_des() {
  des_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_des();
}
inline const ::std::string& Item::des() const {
  // @@protoc_insertion_point(field_get:Item.des)
  return des_.GetNoArena();
}
inline void Item::set_des(const ::std::string& value) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Item.des)
}
#if LANG_CXX11
inline void Item::set_des(::std::string&& value) {
  set_has_des();
  des_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Item.des)
}
#endif
inline void Item::set_des(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Item.des)
}
inline void Item::set_des(const char* value, size_t size) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Item.des)
}
inline ::std::string* Item::mutable_des() {
  set_has_des();
  // @@protoc_insertion_point(field_mutable:Item.des)
  return des_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Item::release_des() {
  // @@protoc_insertion_point(field_release:Item.des)
  clear_has_des();
  return des_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Item::set_allocated_des(::std::string* des) {
  if (des != NULL) {
    set_has_des();
  } else {
    clear_has_des();
  }
  des_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des);
  // @@protoc_insertion_point(field_set_allocated:Item.des)
}

// required int32 count = 2;
inline bool Item::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Item::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Item::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Item::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Item::count() const {
  // @@protoc_insertion_point(field_get:Item.count)
  return count_;
}
inline void Item::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Item.count)
}

// optional int64 id = 3;
inline bool Item::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Item::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Item::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 Item::id() const {
  // @@protoc_insertion_point(field_get:Item.id)
  return id_;
}
inline void Item::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Item.id)
}

// -------------------------------------------------------------------

// Warehouse

// required int32 id = 1;
inline bool Warehouse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Warehouse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Warehouse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Warehouse::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Warehouse::id() const {
  // @@protoc_insertion_point(field_get:Warehouse.id)
  return id_;
}
inline void Warehouse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.id)
}

// required int32 X = 2;
inline bool Warehouse::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Warehouse::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Warehouse::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Warehouse::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Warehouse::x() const {
  // @@protoc_insertion_point(field_get:Warehouse.X)
  return x_;
}
inline void Warehouse::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.X)
}

// required int32 Y = 3;
inline bool Warehouse::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Warehouse::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Warehouse::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Warehouse::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Warehouse::y() const {
  // @@protoc_insertion_point(field_get:Warehouse.Y)
  return y_;
}
inline void Warehouse::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.Y)
}

// -------------------------------------------------------------------

// Truck

// required int32 id = 1;
inline bool Truck::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Truck::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Truck::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Truck::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Truck::id() const {
  // @@protoc_insertion_point(field_get:Truck.id)
  return id_;
}
inline void Truck::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Truck.id)
}

// optional int32 X = 2;
inline bool Truck::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Truck::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Truck::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Truck::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Truck::x() const {
  // @@protoc_insertion_point(field_get:Truck.X)
  return x_;
}
inline void Truck::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Truck.X)
}

// optional int32 Y = 3;
inline bool Truck::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Truck::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Truck::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Truck::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Truck::y() const {
  // @@protoc_insertion_point(field_get:Truck.Y)
  return y_;
}
inline void Truck::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Truck.Y)
}

// -------------------------------------------------------------------

// A2Upickuprequest

// repeated .Item items = 1;
inline int A2Upickuprequest::items_size() const {
  return items_.size();
}
inline void A2Upickuprequest::clear_items() {
  items_.Clear();
}
inline const ::Item& A2Upickuprequest::items(int index) const {
  // @@protoc_insertion_point(field_get:A2Upickuprequest.items)
  return items_.Get(index);
}
inline ::Item* A2Upickuprequest::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:A2Upickuprequest.items)
  return items_.Mutable(index);
}
inline ::Item* A2Upickuprequest::add_items() {
  // @@protoc_insertion_point(field_add:A2Upickuprequest.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Item >*
A2Upickuprequest::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:A2Upickuprequest.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Item >&
A2Upickuprequest::items() const {
  // @@protoc_insertion_point(field_list:A2Upickuprequest.items)
  return items_;
}

// required .Warehouse wh = 2;
inline bool A2Upickuprequest::has_wh() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void A2Upickuprequest::set_has_wh() {
  _has_bits_[0] |= 0x00000001u;
}
inline void A2Upickuprequest::clear_has_wh() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void A2Upickuprequest::clear_wh() {
  if (wh_ != NULL) wh_->Clear();
  clear_has_wh();
}
inline const ::Warehouse& A2Upickuprequest::wh() const {
  const ::Warehouse* p = wh_;
  // @@protoc_insertion_point(field_get:A2Upickuprequest.wh)
  return p != NULL ? *p : *reinterpret_cast<const ::Warehouse*>(
      &::_Warehouse_default_instance_);
}
inline ::Warehouse* A2Upickuprequest::release_wh() {
  // @@protoc_insertion_point(field_release:A2Upickuprequest.wh)
  clear_has_wh();
  ::Warehouse* temp = wh_;
  wh_ = NULL;
  return temp;
}
inline ::Warehouse* A2Upickuprequest::mutable_wh() {
  set_has_wh();
  if (wh_ == NULL) {
    wh_ = new ::Warehouse;
  }
  // @@protoc_insertion_point(field_mutable:A2Upickuprequest.wh)
  return wh_;
}
inline void A2Upickuprequest::set_allocated_wh(::Warehouse* wh) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wh_;
  }
  if (wh) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wh = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wh, submessage_arena);
    }
    set_has_wh();
  } else {
    clear_has_wh();
  }
  wh_ = wh;
  // @@protoc_insertion_point(field_set_allocated:A2Upickuprequest.wh)
}

// required int64 oid = 3;
inline bool A2Upickuprequest::has_oid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void A2Upickuprequest::set_has_oid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void A2Upickuprequest::clear_has_oid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void A2Upickuprequest::clear_oid() {
  oid_ = GOOGLE_LONGLONG(0);
  clear_has_oid();
}
inline ::google::protobuf::int64 A2Upickuprequest::oid() const {
  // @@protoc_insertion_point(field_get:A2Upickuprequest.oid)
  return oid_;
}
inline void A2Upickuprequest::set_oid(::google::protobuf::int64 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:A2Upickuprequest.oid)
}

// -------------------------------------------------------------------

// U2Agenpid

// required int64 pid = 1;
inline bool U2Agenpid::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void U2Agenpid::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void U2Agenpid::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void U2Agenpid::clear_pid() {
  pid_ = GOOGLE_LONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::int64 U2Agenpid::pid() const {
  // @@protoc_insertion_point(field_get:U2Agenpid.pid)
  return pid_;
}
inline void U2Agenpid::set_pid(::google::protobuf::int64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:U2Agenpid.pid)
}

// required int64 oid = 2;
inline bool U2Agenpid::has_oid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void U2Agenpid::set_has_oid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void U2Agenpid::clear_has_oid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void U2Agenpid::clear_oid() {
  oid_ = GOOGLE_LONGLONG(0);
  clear_has_oid();
}
inline ::google::protobuf::int64 U2Agenpid::oid() const {
  // @@protoc_insertion_point(field_get:U2Agenpid.oid)
  return oid_;
}
inline void U2Agenpid::set_oid(::google::protobuf::int64 value) {
  set_has_oid();
  oid_ = value;
  // @@protoc_insertion_point(field_set:U2Agenpid.oid)
}

// -------------------------------------------------------------------

// U2Atruckarrive

// required .Truck tr = 1;
inline bool U2Atruckarrive::has_tr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void U2Atruckarrive::set_has_tr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void U2Atruckarrive::clear_has_tr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void U2Atruckarrive::clear_tr() {
  if (tr_ != NULL) tr_->Clear();
  clear_has_tr();
}
inline const ::Truck& U2Atruckarrive::tr() const {
  const ::Truck* p = tr_;
  // @@protoc_insertion_point(field_get:U2Atruckarrive.tr)
  return p != NULL ? *p : *reinterpret_cast<const ::Truck*>(
      &::_Truck_default_instance_);
}
inline ::Truck* U2Atruckarrive::release_tr() {
  // @@protoc_insertion_point(field_release:U2Atruckarrive.tr)
  clear_has_tr();
  ::Truck* temp = tr_;
  tr_ = NULL;
  return temp;
}
inline ::Truck* U2Atruckarrive::mutable_tr() {
  set_has_tr();
  if (tr_ == NULL) {
    tr_ = new ::Truck;
  }
  // @@protoc_insertion_point(field_mutable:U2Atruckarrive.tr)
  return tr_;
}
inline void U2Atruckarrive::set_allocated_tr(::Truck* tr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tr_;
  }
  if (tr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tr, submessage_arena);
    }
    set_has_tr();
  } else {
    clear_has_tr();
  }
  tr_ = tr;
  // @@protoc_insertion_point(field_set_allocated:U2Atruckarrive.tr)
}

// repeated int64 oids = 2;
inline int U2Atruckarrive::oids_size() const {
  return oids_.size();
}
inline void U2Atruckarrive::clear_oids() {
  oids_.Clear();
}
inline ::google::protobuf::int64 U2Atruckarrive::oids(int index) const {
  // @@protoc_insertion_point(field_get:U2Atruckarrive.oids)
  return oids_.Get(index);
}
inline void U2Atruckarrive::set_oids(int index, ::google::protobuf::int64 value) {
  oids_.Set(index, value);
  // @@protoc_insertion_point(field_set:U2Atruckarrive.oids)
}
inline void U2Atruckarrive::add_oids(::google::protobuf::int64 value) {
  oids_.Add(value);
  // @@protoc_insertion_point(field_add:U2Atruckarrive.oids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
U2Atruckarrive::oids() const {
  // @@protoc_insertion_point(field_list:U2Atruckarrive.oids)
  return oids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
U2Atruckarrive::mutable_oids() {
  // @@protoc_insertion_point(field_mutable_list:U2Atruckarrive.oids)
  return &oids_;
}

// required int32 whid = 3;
inline bool U2Atruckarrive::has_whid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void U2Atruckarrive::set_has_whid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void U2Atruckarrive::clear_has_whid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void U2Atruckarrive::clear_whid() {
  whid_ = 0;
  clear_has_whid();
}
inline ::google::protobuf::int32 U2Atruckarrive::whid() const {
  // @@protoc_insertion_point(field_get:U2Atruckarrive.whid)
  return whid_;
}
inline void U2Atruckarrive::set_whid(::google::protobuf::int32 value) {
  set_has_whid();
  whid_ = value;
  // @@protoc_insertion_point(field_set:U2Atruckarrive.whid)
}

// -------------------------------------------------------------------

// A2Utruckdepart

// required .Truck tr = 1;
inline bool A2Utruckdepart::has_tr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void A2Utruckdepart::set_has_tr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void A2Utruckdepart::clear_has_tr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void A2Utruckdepart::clear_tr() {
  if (tr_ != NULL) tr_->Clear();
  clear_has_tr();
}
inline const ::Truck& A2Utruckdepart::tr() const {
  const ::Truck* p = tr_;
  // @@protoc_insertion_point(field_get:A2Utruckdepart.tr)
  return p != NULL ? *p : *reinterpret_cast<const ::Truck*>(
      &::_Truck_default_instance_);
}
inline ::Truck* A2Utruckdepart::release_tr() {
  // @@protoc_insertion_point(field_release:A2Utruckdepart.tr)
  clear_has_tr();
  ::Truck* temp = tr_;
  tr_ = NULL;
  return temp;
}
inline ::Truck* A2Utruckdepart::mutable_tr() {
  set_has_tr();
  if (tr_ == NULL) {
    tr_ = new ::Truck;
  }
  // @@protoc_insertion_point(field_mutable:A2Utruckdepart.tr)
  return tr_;
}
inline void A2Utruckdepart::set_allocated_tr(::Truck* tr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tr_;
  }
  if (tr) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tr, submessage_arena);
    }
    set_has_tr();
  } else {
    clear_has_tr();
  }
  tr_ = tr;
  // @@protoc_insertion_point(field_set_allocated:A2Utruckdepart.tr)
}

// -------------------------------------------------------------------

// A2U

// repeated .A2Upickuprequest pr = 1;
inline int A2U::pr_size() const {
  return pr_.size();
}
inline void A2U::clear_pr() {
  pr_.Clear();
}
inline const ::A2Upickuprequest& A2U::pr(int index) const {
  // @@protoc_insertion_point(field_get:A2U.pr)
  return pr_.Get(index);
}
inline ::A2Upickuprequest* A2U::mutable_pr(int index) {
  // @@protoc_insertion_point(field_mutable:A2U.pr)
  return pr_.Mutable(index);
}
inline ::A2Upickuprequest* A2U::add_pr() {
  // @@protoc_insertion_point(field_add:A2U.pr)
  return pr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::A2Upickuprequest >*
A2U::mutable_pr() {
  // @@protoc_insertion_point(field_mutable_list:A2U.pr)
  return &pr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::A2Upickuprequest >&
A2U::pr() const {
  // @@protoc_insertion_point(field_list:A2U.pr)
  return pr_;
}

// repeated .A2Utruckdepart td = 2;
inline int A2U::td_size() const {
  return td_.size();
}
inline void A2U::clear_td() {
  td_.Clear();
}
inline const ::A2Utruckdepart& A2U::td(int index) const {
  // @@protoc_insertion_point(field_get:A2U.td)
  return td_.Get(index);
}
inline ::A2Utruckdepart* A2U::mutable_td(int index) {
  // @@protoc_insertion_point(field_mutable:A2U.td)
  return td_.Mutable(index);
}
inline ::A2Utruckdepart* A2U::add_td() {
  // @@protoc_insertion_point(field_add:A2U.td)
  return td_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::A2Utruckdepart >*
A2U::mutable_td() {
  // @@protoc_insertion_point(field_mutable_list:A2U.td)
  return &td_;
}
inline const ::google::protobuf::RepeatedPtrField< ::A2Utruckdepart >&
A2U::td() const {
  // @@protoc_insertion_point(field_list:A2U.td)
  return td_;
}

// -------------------------------------------------------------------

// U2A

// repeated .U2Agenpid gp = 1;
inline int U2A::gp_size() const {
  return gp_.size();
}
inline void U2A::clear_gp() {
  gp_.Clear();
}
inline const ::U2Agenpid& U2A::gp(int index) const {
  // @@protoc_insertion_point(field_get:U2A.gp)
  return gp_.Get(index);
}
inline ::U2Agenpid* U2A::mutable_gp(int index) {
  // @@protoc_insertion_point(field_mutable:U2A.gp)
  return gp_.Mutable(index);
}
inline ::U2Agenpid* U2A::add_gp() {
  // @@protoc_insertion_point(field_add:U2A.gp)
  return gp_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::U2Agenpid >*
U2A::mutable_gp() {
  // @@protoc_insertion_point(field_mutable_list:U2A.gp)
  return &gp_;
}
inline const ::google::protobuf::RepeatedPtrField< ::U2Agenpid >&
U2A::gp() const {
  // @@protoc_insertion_point(field_list:U2A.gp)
  return gp_;
}

// repeated .U2Atruckarrive ta = 2;
inline int U2A::ta_size() const {
  return ta_.size();
}
inline void U2A::clear_ta() {
  ta_.Clear();
}
inline const ::U2Atruckarrive& U2A::ta(int index) const {
  // @@protoc_insertion_point(field_get:U2A.ta)
  return ta_.Get(index);
}
inline ::U2Atruckarrive* U2A::mutable_ta(int index) {
  // @@protoc_insertion_point(field_mutable:U2A.ta)
  return ta_.Mutable(index);
}
inline ::U2Atruckarrive* U2A::add_ta() {
  // @@protoc_insertion_point(field_add:U2A.ta)
  return ta_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::U2Atruckarrive >*
U2A::mutable_ta() {
  // @@protoc_insertion_point(field_mutable_list:U2A.ta)
  return &ta_;
}
inline const ::google::protobuf::RepeatedPtrField< ::U2Atruckarrive >&
U2A::ta() const {
  // @@protoc_insertion_point(field_list:U2A.ta)
  return ta_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_au_2eproto__INCLUDED
